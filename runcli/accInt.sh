#!/bin/bash -e
export TEST_RES_REPO="pipeline_scriptRepo"
# since resources here have dashes Shippable replaces them and UPPER cases them
export TEST_RES_REPO_UP=$(echo $TEST_RES_REPO | awk '{print toupper($0)}')

echo TEST_CURR_JOB=$JOB_NAME
echo TEST_CURR_JOB_UP=$TEST_CURR_JOB_UP
echo JobTriggredByName=$JOB_TRIGGERED_BY_NAME
echo JobTriggredByID=$JOB_TRIGGERED_BY_ID

echo "-------> AWS"
export TEST_AWS_CLI="ship_aws_cli"
# since resources here have dashes Shippable replaces them and UPPER cases them
export TEST_AWS_CLI_UP=$(echo $TEST_AWS_CLI | awk '{print toupper($0)}')
export TEST_AWS_INTEGRATION_ACCESS_KEY_ID=$(eval echo "$"$TEST_AWS_CLI_UP"_INTEGRATION_AWS_ACCESS_KEY_ID")
export TEST_AWS_INTEGRATION_SECRET_ACCESS_KEY=$(eval echo "$"$TEST_AWS_CLI_UP"_INTEGRATION_AWS_SECRET_ACCESS_KEY")
export TEST_AWS_INTEGRATION_URL=$(eval echo "$"$TEST_AWS_CLI_UP"_INTEGRATION_URL")
echo TEST_AWS_INTEGRATION_ACCESS_KEY_ID=${#TEST_AWS_INTEGRATION_ACCESS_KEY_ID}
echo TEST_AWS_INTEGRATION_SECRET_ACCESS_KEY=${#TEST_AWS_INTEGRATION_SECRET_ACCESS_KEY}
echo TEST_AWS_INTEGRATION_URL=$TEST_AWS_INTEGRATION_URL

echo "------> ECR"
export TEST_ECR_CLI="ship_ecr_cli"
export TEST_ECR_CLI_UP=$(eval echo $TEST_ECR_CLI | awk '{print toupper($0)}')
export TEST_ECR_INTEGRATION_ACCESS_KEY_ID=$(eval echo "$"$TEST_ECR_CLI_UP"_INTEGRATION_AWS_ACCESS_KEY_ID")
export TEST_ECR_INTEGRATION_SECRET_ACCESS_KEY=$(eval echo "$"$TEST_ECR_CLI_UP"_INTEGRATION_AWS_SECRET_ACCESS_KEY")
echo TEST_ECR_INTEGRATION_ACCESS_KEY_ID=${#TEST_ECR_INTEGRATION_ACCESS_KEY_ID}
echo TEST_ECR_INTEGRATION_SECRET_ACCESS_KEY=${#TEST_ECR_INTEGRATION_SECRET_ACCESS_KEY}

echo "-------> Docker"
export TEST_DH_CLI="ship_dh_cli"
export TEST_DH_CLI_UP=$(echo $TEST_DH_CLI | awk '{print toupper($0)}')
export TEST_DH_INTEGRATION_USERNAME=$(eval echo "$"$TEST_DH_CLI_UP"_INTEGRATION_USERNAME")
export TEST_DH_INTEGRATION_PASSWORD=$(eval echo "$"$TEST_DH_CLI_UP"_INTEGRATION_PASSWORD")
export TEST_DH_INTEGRATION_EMAIL=$(eval echo "$"$TEST_DH_CLI_UP"_INTEGRATION_EMAIL")
echo TEST_DH_INTEGRATION_USERNAME=$TEST_DH_INTEGRATION_USERNAME
echo TEST_DH_INTEGRATION_PASSWORD=${#TEST_DH_INTEGRATION_PASSWORD}
echo TEST_DH_INTEGRATION_EMAIL=$TEST_DH_INTEGRATION_EMAIL

echo "-------> GCR"
export TEST_GCR_CLI="ship_gcr_cli"
export TEST_GCR_CLI_UP=$(echo $TEST_GCR_CLI | awk '{print toupper($0)}')
export TEST_GCR_INTEGRATION_JSON_KEY=$(eval echo "$"$TEST_GCR_CLI_UP"_INTEGRATION_JSON_KEY")
echo TEST_GCR_INTEGRATION_JSON_KEY=${#TEST_GCR_INTEGRATION_JSON_KEY}

echo "-------> GKE"
export TEST_GKE_CLI="ship_gke_cli"
export TEST_GKE_CLI_UP=$(echo $TEST_GKE_CLI | awk '{print toupper($0)}')
export TEST_GKE_INTEGRATION_JSON_KEY=$(eval echo "$"$TEST_GKE_CLI_UP"_INTEGRATION_JSON_KEY")
export TEST_GKE_INTEGRATION_URL=$(eval echo "$"$TEST_GKE_CLI_UP"_INTEGRATION_URL")
echo TEST_GKE_INTEGRATION_URL=$TEST_GKE_INTEGRATION_URL

echo "-------> QUAY"
export TEST_QUAY_CLI="ship_quay_cli"
export TEST_QUAY_CLI_UP=$(echo $TEST_QUAY_CLI | awk '{print toupper($0)}')
export TEST_QUAY_INTEGRATION_USERNAME=$(eval echo "$"$TEST_QUAY_CLI_UP"_INTEGRATION_USERNAME")
export TEST_QUAY_INTEGRATION_PASSWORD=$(eval echo "$"$TEST_QUAY_CLI_UP"_INTEGRATION_PASSWORD")
export TEST_QUAY_INTEGRATION_URL=$(eval echo "$"$TEST_QUAY_CLI_UP"_INTEGRATION_URL")
export TEST_QUAY_INTEGRATION_EMAIL=$(eval echo "$"$TEST_QUAY_CLI_UP"_INTEGRATION_EMAIL")
export TEST_QUAY_INTEGRATION_ACCESSTOKEN=$(eval echo "$"$TEST_QUAY_CLI_UP"_INTEGRATION_ACCESSTOKEN")
echo TEST_QUAY_INTEGRATION_USERNAME=$TEST_QUAY_INTEGRATION_USERNAME
echo TEST_QUAY_INTEGRATION_PASSWORD=${#TEST_QUAY_INTEGRATION_PASSWORD}
echo TEST_QUAY_INTEGRATION_URL=$TEST_QUAY_INTEGRATION_URL
echo TEST_QUAY_INTEGRATION_EMAIL=$TEST_QUAY_INTEGRATION_EMAIL
echo TEST_QUAY_INTEGRATION_ACCESSTOKEN=${#TEST_QUAY_INTEGRATION_ACCESSTOKEN}

set_context() {
  echo "-----> Git resource"
  export TEST_REPO_VERSION=$(eval echo "$"$TEST_RES_REPO_UP"_VERSIONNUMBER") 
  export TEST_REPO_FULL_NAME=$(eval echo "$"$TEST_RES_REPO_UP"_REPO_FULL_NAME")
  export TEST_REPO_BRANCH=$(eval echo "$"$TEST_RES_REPO_UP"_BRANCH")
  export TEST_REPO_COMMIT=$(eval echo "$"$TEST_RES_REPO_UP"_COMMIT")
  export TEST_REPO_COMMIT_MESSAGE=$(eval echo "$"$TEST_RES_REPO_UP"_COMMIT_MESSAGE")
  export TEST_REPO_COMMITTER=$(eval echo "$"$TEST_RES_REPO_UP"_COMMITTER") 
  export TEST_REPO_HTTPS_URL=$(eval echo "$"$TEST_RES_REPO_UP"_HTTPS_URL")
  export TEST_REPO_IS_FORK=$(eval echo "$"$TEST_RES_REPO_UP"_IS_FORK")  
  export TEST_REPO_PULL_REQUEST_REPO_FULL_NAME=$(eval echo "$"$TEST_RES_REPO_UP"_PULL_REQUEST_REPO_FULL_NAME")    
  export TEST_REPO_IS_GIT_TAG=$(eval echo "$"$TEST_RES_REPO_UP"_IS_GIT_TAG")
  export TEST_REPO_IS_RELEASE=$(eval echo "$"$TEST_RES_REPO_UP"_IS_RELEASE")  
  export TEST_REPO_RELEASE_NAME=$(eval echo "$"$TEST_RES_REPO_UP"_RELEASE_NAME")
  export TEST_REPO_RELEASED_AT=$(eval echo "$"$TEST_RES_REPO_UP"_RELEASED_AT")
  export TEST_REPO_SSH_URL=$(eval echo "$"$TEST_RES_REPO_UP"_SSH_URL")

  echo TEST_RES_REPO=$TEST_RES_REPO
  echo TEST_RES_REPO_UP=$TEST_RES_REPO_UP
  echo TEST_RES_REPO_STATE=$TEST_RES_REPO_STATE
  echo TEST_REPO_RESO_VERSION=$TEST_REPO_VERSION
  echo TEST_REPO_FULL_NAME=$TEST_REPO_FULL_NAME
  echo TEST_BRANCH=$TEST_REPO_BRANCH
  echo TEST_COMMIT=$TEST_REPO_COMMIT
  echo TEST_COMMIT_MESSAGE=$TEST_REPO_COMMIT_MESSAGE
  echo TEST_RESO_COMMITER=$TEST_REPO_COMMITTER
  echo TEST_REPO_HTTPS_URL=$TEST_REPO_HTTPS_URL
  echo TEST_REPO_IS_FORK=$TEST_REPO_IS_FORK
  echo TEST_REPO_PULL_REQUEST_REPO_FULL_NAME=$TEST_REPO_PULL_REQUEST_REPO_FULL_NAME
  echo TEST_REPO_IS_GIT_TAG=$TEST_REPO_IS_GIT_TAG
  echo TEST_REPO_IS_RELEASE=$TEST_REPO_IS_RELEASE
  echo TEST_REPO_RELEASE_NAME=$TEST_REPO_RELEASE_NAME
  echo TEST_REPO_RELEASED_AT=$TEST_REPO_RELEASED_AT
  echo TEST_REPO_SSH_URL=$TEST_REPO_SSH_URL
}
